<?xml version="1.0" encoding="UTF-8"?><testsuite errors="0" failures="1" name="Employee Details" skipped="0" tests="1" time="4.14" timestamp="2022-04-06 05:00:06"><testcase name="Send a Request to get invalid user details"><failure message="1 expectation failed.&#10;Expected status code &lt;200&gt; but was &lt;500&gt;.&#10;" type="java.lang.AssertionError">1 expectation failed.
Expected status code &lt;200&gt; but was &lt;500&gt;.
</failure><system-err>1 expectation failed.
Expected status code &lt;200&gt; but was &lt;500&gt;.
&#13;
io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)&#13;
io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)&#13;
io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)&#13;
io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)&#13;
io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)&#13;
io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)&#13;
io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)&#13;
definitions.EmployeeDefinitions.lambda$verifyInalidUser$1(EmployeeDefinitions.java:32)&#13;
net.serenitybdd.rest.SerenityRest.restAssuredThat(SerenityRest.java:626)&#13;
definitions.EmployeeDefinitions.verifyInalidUser(EmployeeDefinitions.java:32)&#13;
âœ½.the response will return statuscode 200 and status 'status' and and message 'error'(classpath:features/Employee.feature:11)&#13;
</system-err></testcase></testsuite>